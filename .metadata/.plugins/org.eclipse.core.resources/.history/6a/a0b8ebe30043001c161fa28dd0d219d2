package com.shadow.springBootAngular.services.CartServices;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.shadow.springBootAngular.Repository.AddToCartRepo;
import com.shadow.springBootAngular.model.AddToCartModel;
import com.shadow.springBootAngular.model.ProductModel;
import com.shadow.springBootAngular.services.ProductService.ProductService;

@Service
public class CartServiceImpl implements CartService {

	@Autowired
	AddToCartRepo addCartRepo;

	@Autowired
	ProductService proServices;
    private static final Logger logger = LoggerFactory.getLogger(CartServiceImpl.class);

	@Override
	public List<AddToCartModel> addCartbyUserIdAndProductId(long productId, long userId, int qty, double price)
			throws Exception {
		try {
			if(addCartRepo.getCartByUserIdAndProductId(userId, productId).isPresent()){
				throw new Exception("Product is already exist.");
			}
			AddToCartModel obj = new AddToCartModel();
			obj.setQty(qty);
			obj.setUser_id(userId);
			ProductModel pro = proServices.getProductsById(productId);
			obj.setProduct(pro); 
			obj.setPrice(price);
			addCartRepo.save(obj);	
			List<AddToCartModel> listTemp= this.getCartByUserId(userId);
			if(listTemp == null) {
				return listTemp;
			}
			return 	listTemp;
		}catch(Exception e) {
			e.printStackTrace();
			logger.error(""+e.getMessage());
			throw new Exception(e.getMessage());
		}
	}

	@Override
	public List<AddToCartModel> getCartByUserId(long userId) {
		return addCartRepo.getCartByUserId(userId);
	}

	@Override
	public List<AddToCartModel> removeCartByUserId(long cartId, long userId) {
		addCartRepo.deleteCartByIdAndUserId(userId, cartId);
		return this.getCartByUserId(userId);
	}

	@Override
	public void updateQtyByCartId(long cartId, int qty, double price) throws Exception {
		addCartRepo.updateQtyByCartId(cartId,price,qty);
	}

}
