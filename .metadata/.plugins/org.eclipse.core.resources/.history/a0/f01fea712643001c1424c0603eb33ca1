package com.shadow.springBootAngular.services.UserServices.impl;


import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.shadow.springBootAngular.Repository.UsersRepo;
import com.shadow.springBootAngular.model.UserModel;
//import com.shadow.springBootAngular.services.UserServices.UserService;
import com.shadow.springBootAngular.services.UserServices.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	UsersRepo userRepo;
	
	@Override
	public UserModel findByMobile(String mobile) throws Exception {
		return userRepo.findByMobile(mobile).orElseThrow(()->new Exception("User Not found.."));
	}

	@Override
	public UserModel getUserDetailById(long userId) throws Exception {
		
		return userRepo.findById(userId).orElseThrow(()->new Exception("User Not found.."));
	}

	@Override
	public UserModel signUpUser(HashMap<String, String> signupRequest) throws Exception {
		
		try {
			if(userRepo.findByMobile(signupRequest.get("mobile")).isPresent()) {
				throw new Exception("User Already Registered with Mobile Number!");
			}
			UserModel user = new UserModel();
			user.setName(signupRequest.get("name"));
			user.setEmail(signupRequest.get("email"));
			user.setMobile(signupRequest.get("mobile"));
			user.setPassword(signupRequest.get("password"));
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");  
		    Date date = new Date();  
			user.setCreated_at(formatter.format(date).toString());
			userRepo.save(user);
			return user;
		}catch(Exception e) {
			throw new Exception(e.getMessage());
		}
	}

}